name: Security Scans

on:
  workflow_run:
    workflows: ["Docker Compose CI"]
    branches: [main]
    types:
      - completed

jobs:
  security-scan:
    runs-on: ubuntu-latest

    steps:
      # 1 Checkout code
      - name: Checkout repository
        uses: actions/checkout@v3

      # 2 Set up Trivy
      - name: Set up Trivy
        uses: aquasecurity/setup-trivy@v0.2.2

      # 3 Run Trivy filesystem scan
      - name: Run Trivy FS scan
        run: |
          trivy fs --exit-code 0 --severity HIGH,CRITICAL ./iCinema | tee trivy_fs.log

      # 4 Run Trivy backend image scan
      - name: Run Trivy Backend image scan
        run: |
          trivy image --exit-code 0 --severity HIGH,CRITICAL sudarshan101/my-docker-backend:latest | tee trivy_backend.log

      # 5 Run Trivy frontend image scan
      - name: Run Trivy Frontend image scan
        run: |
          trivy image --exit-code 0 --severity HIGH,CRITICAL sudarshan101/my-docker-frontend:latest | tee trivy_frontend.log

      # 6 Run npm audit for vulnerabilities
      - name: Run npm audit
        run: |
          cd iCinema/frontend
          npm install --omit=dev
          npm audit --json | tee ../../npm-audit.log

      # 7 Run Gitleaks secret scan
      - name: Run Gitleaks
        uses: gitleaks/gitleaks-action@v2
        with:
          args: detect --source=. --no-git --report-format=json --report-path=gitleaks.log || true

      # 8 Combine and analyze logs for alerts
      - name: Combine scan results and check for issues
        env:
          AWS_REGION: ${{ secrets.AWS_REGION }}
          SNS_TOPIC_ARN: ${{ secrets.SNS_TOPIC_ARN }}
        run: |
          echo "===== TRIVY (FS) =====" > combined.log
          cat trivy_fs.log >> combined.log
          echo "\n===== TRIVY (BACKEND IMAGE) =====" >> combined.log
          cat trivy_backend.log >> combined.log
          echo "\n===== TRIVY (FRONTEND IMAGE) =====" >> combined.log
          cat trivy_frontend.log >> combined.log
          echo "\n===== NPM AUDIT =====" >> combined.log
          cat npm-audit.log >> combined.log
          echo "\n===== GITLEAKS =====" >> combined.log
          cat gitleaks.log >> combined.log

          # Detect vulnerabilities
          if grep -qiE "CRITICAL|HIGH|Secret" combined.log; then
            echo "Security vulnerabilities found â€” sending SNS alert..."
            tail -n 50 combined.log > alert_snippet.log
            aws sns publish \
              --region "$AWS_REGION" \
              --topic-arn "$SNS_TOPIC_ARN" \
              --subject "Security Alert: Vulnerabilities Detected in Build" \
              --message-group-id "github-actions"
              --message file://alert_snippet.log
          else
            echo "No major vulnerabilities found."
          fi
      - name: Notify success
        if: success()
        env:
          AWS_REGION: ${{ secrets.AWS_REGION }}
          SNS_TOPIC_ARN: ${{ secrets.SNS_TOPIC_ARN }}
        run: |
          aws sns publish \
            --region "$AWS_REGION" \
            --topic-arn "$SNS_TOPIC_ARN" \
            --subject "GitHub Actions: Build Succeeded" \
            --message "The workflow completed successfully!" \
            --message-group-id "github-actions"

      # 9 Upload all logs for manual review
      - name: Upload security scan results
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: security-scan-logs
          path: |
            trivy_fs.log
            trivy_backend.log
            trivy_frontend.log
            npm-audit.log
            gitleaks.log
            combined.log
